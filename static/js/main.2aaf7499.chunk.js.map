{"version":3,"sources":["components/ContactForm/ContactFormStyled.jsx","redux/phoneBook/phoneBookActions.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.jsx","components/Filter/Filter.jsx","App.js","redux/phoneBook/phoneBookReducer.jsx","redux/store.jsx","index.js"],"names":["ContactFormStyled","styled","div","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","nameId","phoneId","handelInputChange","event","target","value","setState","handelFormSubmit","preventDefault","props","onSubmit","className","this","type","pattern","title","required","onChange","autoComplete","Component","connect","dispatch","contactsActions","ContactListStyled","ul","contacts","items","onDeleteContact","console","log","map","contact","onClick","FilterStyled","Filter","filter","App","getVisibleContacts","normalizedFilter","toLowerCase","includes","contactsStorage","localStorage","getItem","parseData","JSON","parse","prevProps","prevState","setItem","stringify","createReducer","actions","action","combineReducers","store","configureStore","reducer","phoneBookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aaf7499.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ContactFormStyled = styled.div`\r\n  align-items: center;\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  .form-label {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    color: #6b7b96;\r\n  }\r\n  .form-input {\r\n    display: block;\r\n    padding: 5px;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    color: #636161;\r\n    outline: none;\r\n  }\r\n  input:focus {\r\n    box-shadow: 1px 1px 2px 0 #12bcb0;\r\n    border: 1px solid #dbd9d9;\r\n  }\r\n  .addBtn {\r\n    margin-top: 20px;\r\n    padding: 5px;\r\n    background-color: transparent;\r\n    border: 2px solid gray;\r\n    border-radius: 5px;\r\n    font-weight: 700;\r\n    background: linear-gradient(45deg, #0b2349 20%, #0d61bc 75%, #8aa9d6);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 1px 1px 2px 0 #0b2349;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactFormStyled;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('phoneBook/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\nconst deleteContact = createAction('phoneBook/delete', id => {\r\n  return {\r\n    payload: id,\r\n  };\r\n});\r\nconst changeFilter = createAction('phoneBook/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactFormStyled from './ContactFormStyled';\r\nimport contactsActions from '../../redux/phoneBook/phoneBookActions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameId = uuidv4();\r\n  phoneId = uuidv4();\r\n\r\n  handelInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelFormSubmit = event => {\r\n    const { name, number } = this.state;\r\n    event.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactFormStyled>\r\n        <form className=\"contacts-form\" onSubmit={this.handelFormSubmit}>\r\n          <label className=\"form-label\" id={this.nameId}>\r\n            Name\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name can only contains letters, apostrophe, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n              required\r\n              id={this.nameId}\r\n              onChange={this.handelInputChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label className=\"form-label\" id={this.phoneId}>\r\n            Number\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number can only contains digits (min 8 digits), spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              id={this.phoneId}\r\n              onChange={this.handelInputChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          <button className=\"addBtn\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContactFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import styled from 'styled-components';\r\n\r\nconst ContactListStyled = styled.ul`\r\n  margin-top: 30px;\r\n  .item {\r\n    &:not(:last-child) {\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n  p {\r\n    display: inline-block;\r\n    margin-right: 20px;\r\n  }\r\n  .name {\r\n    color: #052f74;\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n  }\r\n  .number {\r\n    color: #202733;\r\n    font-weight: 600;\r\n    font-size: 17px;\r\n  }\r\n  .delBtn {\r\n    display: block;\r\n    margin-left: auto;\r\n    padding: 5px;\r\n    background: linear-gradient(45deg, #0b2349 20%, #0d61bc 75%, #8aa9d6);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    border: 2px solid gray;\r\n    border-radius: 5px;\r\n    font-weight: 700;\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 1px 1px 3px 0 #fc0202;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactListStyled;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactListStyled from './ContactListStyled';\r\nimport contactsActions from '../../redux/phoneBook/phoneBookActions';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  console.log(contacts);\r\n  return (\r\n    <ContactListStyled>\r\n      {contacts.map(contact => {\r\n        const { id, name, number } = contact;\r\n\r\n        return (\r\n          <li className=\"item\" key={id}>\r\n            <p className=\"name\">{name}:</p>\r\n            <p className=\"number\">{number}</p>\r\n            <button\r\n              className=\"delBtn\"\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nconst mapstateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactList);\r\n","import styled from 'styled-components';\r\n\r\nconst FilterStyled = styled.div`\r\n  text-align: center;\r\n  .title {\r\n    color: #6b7b96;\r\n    margin-bottom: 10px;\r\n  }\r\n  .finde-input {\r\n    display: block;\r\n    padding: 5px;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    color: #636161;\r\n    outline: none;\r\n  }\r\n  input:focus {\r\n    box-shadow: 1px 1px 2px 0 #12bcb0;\r\n    border: 1px solid #dbd9d9;\r\n  }\r\n`;\r\nexport default FilterStyled;\r\n","import React from 'react';\r\nimport FilterStyled from './FilterStyled';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <h3 className=\"title\">Finde contacts by name</h3>\r\n      <form>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filter}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name can only contains letters, apostrophe, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n            required\r\n            onChange={onChange}\r\n            className=\"finde-input\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </label>\r\n      </form>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n// const mapstateToProps = state => ({\r\n//   value: state.phoneBook.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: event =>\r\n//     dispatch(phoneBookActions.changeFilter(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapstateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  // // contacts\n\n  // deleteContact = contactId => {\n  //   const warningMassege = window.confirm('Delete this contact?');\n  //   if (warningMassege === false) return;\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n\n  // filter\n  changeFilter = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  // hw3\n\n  componentDidMount() {\n    const contactsStorage = localStorage.getItem('contacts');\n    const parseData = JSON.parse(contactsStorage);\n    if (parseData) {\n      this.setState({ contacts: parseData });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={this.changeFilter} />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phoneBookActions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, action) => [action.payload, ...state],\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n});\r\n\r\n// const filter = createReducer('', {\r\n//   [actions.changeFilter]: (_, action) => action.payload,\r\n// });\r\n\r\n// filter,\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: phoneBookReducer },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n\r\n// import phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\n// const rootReduser = combineReducers({\r\n//   contacts: phoneBookReducer,\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReduser);\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n\r\n// // import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// // import logger from 'redux-logger';\r\n\r\n// // const middleware = [...getDefaultMiddleware(), logger];\r\n\r\n// // const store = configureStore({\r\n// //   //   reducer: { contacts: phoneBookReducer },\r\n// //   middleware,\r\n// //   devTools: process.env.NODE_ENV === 'development',\r\n// // });\r\n\r\n// // export default store;\r\n\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGEPURGE,\r\n//   REGISTER,\r\n// } from 'redux-persist';\r\n\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const persistConfig = {\r\n//   key: 'root',\r\n//   storage,\r\n// };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/es/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n//persistor={store.persistor}\n"],"sourceRoot":""}